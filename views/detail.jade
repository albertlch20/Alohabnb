extends layout2

block content
  div(id='content' class='p-4 p-md-5 pt-5')
    div(id='container' class='container')
      div(class='main' style='width:70rem')
        div(id='#{pid}' class='carousel slide mx-auto card-img-top' data-interval='false')
          .row
            .col-lg-4.col-md-12.mb-4.mb-lg-0
              img.w-100.shadow-1-strong.rounded.mb-4(src='/#{images[0]}')
            .col-lg-4.mb-4.mb-lg-0
              img.w-100.shadow-1-strong.rounded.mb-4(src='/#{images[1]}')
            .col-lg-4.mb-4.mb-lg-4
              img.w-100.shadow-1-strong.rounded.mb-4(src='/#{images[2]}')
      
        div(class='card-body')
          h5 #{title}
          p(class='card-text') #{location}
        br
        div(class='body')
          div(class='main' style='width:30rem')
            table(class='table')
              tbody
                tr
                  th(scope='row') Bedrooms: 
                  td #{bedrooms}
                tr
                  th(scope='row') Nightly Fees: 
                  td #{nightly_fee}
                tr
                  th(scope='row') Cleaning Fee: 
                  td #{cleaning_fee}
                tr
                  th(scope='row') Service Fee: 
                  td #{service_fee}
                tr
                  th(scope='row') Description: 
                  td #{description}
                tr
                  th(scope='row') Amenities: 
                  td #{amenities}
            .col-md-12
              .stars
                form(action='')
                  input#star-5.star.star-5(type='radio' name='star')
                  label.star.star-5(for='star-5')
                  input#star-4.star.star-4(type='radio' name='star')
                  label.star.star-4(for='star-4')
                  input#star-3.star.star-3(type='radio' name='star')
                  label.star.star-3(for='star-3')
                  input#star-2.star.star-2(type='radio' name='star')
                  label.star.star-2(for='star-2')
                  input#star-1.star.star-1(type='radio' name='star')
                  label.star.star-1(for='star-1')
            div(class='form-group')
              //label(htmlfor='exampleFormControlTextarea1') Add Comment
              //textarea#exampleFormControlTextarea1(class='form-control' rows='3')
            .input-group
              button.btn.btn-primary.m-2(type='submit' onclick='{returnToMainPage}') Submit
              form(action="/users/favourites" method='POST')
                input#uid.btn.btn-primary.m-2(name='uid' type='hidden' value='')
                input#pid.btn.btn-primary.m-2(name='pid' type='hidden' value='#{pid}')
                input.btn.btn-primary.m-2(type='submit' value='Add to Favourites')
              form(action="/newReservation/#{pid}")
                input.btn.btn-primary.m-2(type='submit' value='Reserve')
              p#showRes.hidden Success
            br
            br
            form(action="/")
              input.backButton(type='submit' value='Back to Main Page')
            br
            section#wrapper
              aside.card.w-100
            br
            ///

            ///
            script.
              const user = JSON.parse(localStorage.getItem('user'));
              if(user) {
                var uid = document.getElementById("uid");
                uid.value = user.uid;
              } else {
                window.location.href = "/login";
                alert('Please log in first!');
              }
              
              $(document).ready(function() {
                if('#{updateResult}' !== '') {
                  showRes.textContent='#{updateResult}';
                  showRes.classList.remove('hidden');
                }
              })
              /////////////////////////
              //card
              const detailsCard = (name, button) => {
                return {
                  name,
                  button,
                  showDetails() {
                    return `<div class="row">

               <div class="col-9">
                     <h4>${this.name}</h4>
                     <textarea type="text" id="inputStatus" placeholder="Add Comment Here"></textarea>
               <div class="d-flex">
               <button class="ml-auto" onclick="addToFunc(); eraseText()" type="button">${this.button}</button>
               </div>
               </div>
               </div>
               <div class="row">
               <div class="col-12">
               <div id="addTask">
               </div>
               </div>
               </div>
               `
                  }
                };
              };

              let detailsUpdate = detailsCard("Placeholder", "Post comment");

              document.querySelector("aside.card").innerHTML = detailsUpdate.showDetails();

              const addToFunc = () => {
                // gets value from main text area
                let userName = detailsUpdate.name;
                let input = document.getElementById('inputStatus').value;
                // creates element for the value of input
                let title = document.createElement("h6");
                let status = document.createElement("p");
                let reply = document.createElement("ul");
                let deleteButton = document.createElement("li");
                let like = document.createElement("li");
                let replyList = document.createElement("li");
                like.innerHTML = "Like";
                replyList.innerHTML = "Add Comment";
                title.innerHTML = userName;
                //creates a node for the original input
                let textnode = document.createTextNode(input);
                status.appendChild(textnode);
                status.prepend(title);
                status.appendChild(reply);
                //reply.appendChild(like);
                //reply.appendChild(replyList);
                reply.appendChild(deleteButton);
                document.getElementById('addTask').appendChild(status);
                status.classList.add("statusBox");
                like.classList.add("like");
                replyList.classList.add("reply");
                //userName.classList.add("title");
                //creates a container for the remove button
                let statusBox = document.createElement("div");
                //creates a button to delete status
                let removeTask = document.createElement('input');
                // adds type of which it is a button
                removeTask.setAttribute('type', 'button');
                removeTask.classList.add("removeButton");
                // sets the buttons value
                removeTask.setAttribute("value", "delete");
                // sets the button next to the status text
                deleteButton.appendChild(removeTask);
                //sets the button to remove status
                removeTask.addEventListener('click', function () {
                  status.parentNode.removeChild(status);
                }, false);
                like.addEventListener('click', function () {
                  this.classList.add("likeClicked");
                }, false);

                //For reply
                replyList.addEventListener('click', function () {
                  this.classList.add("likeClicked");
                  let luke = document.getElementById('addTask');
                  let skywalker = document.createElement("textarea");
                  let replied = document.createElement("p");
                  let leia = document.createElement("input");
                  leia.setAttribute('type', 'button');
                  leia.setAttribute("value", "reply");
                  leia.setAttribute("class", "removeButton");
                  skywalker.setAttribute("id", "pushReply");
                  skywalker.setAttribute("placeholder", "Reply to this comment");
                  luke.appendChild(skywalker);
                  luke.appendChild(leia);
                  luke.appendChild(replied);
                  leia.addEventListener('click', function () {
                    let replyInput = document.getElementById('pushReply').value;
                    let replyNode = document.createTextNode(replyInput);
                    replied.appendChild(replyNode);
                    if (replyInput === "") {
                      replied.classList.remove("statusBox");
                      skywalker.parentNode.removeChild(skywalker);
                      this.parentNode.removeChild(this);
                    } else {
                      let replyName = document.createElement("h6");
                      let deleteComment = document.createElement("p");
                      deleteComment.innerHTML = "Delete";
                      deleteComment.classList.add("deleteComment");
                      replyName.innerHTML = `${userName} says:`;
                      replied.prepend(replyName);
                      replied.prepend(deleteComment);
                      replied.classList.add("statusBox");
                      skywalker.parentNode.removeChild(skywalker);
                      this.parentNode.removeChild(this);
                      deleteComment.addEventListener('click', function () {
                        replied.parentNode.removeChild(replied);
                      }, false);
                    }
                  }, false);
                }, false);

              };


              const eraseText = () => {
                //erases placeholder text in textarea
                document.getElementById("inputStatus").value = "";
              };